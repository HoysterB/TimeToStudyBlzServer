@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations


<div style="max-width: 800px; margin: 0 auto;">
    <MudCard>
        <MudText Align="Align.Center" Typo="Typo.h6">Configuração de conta</MudText>

        <MudCardContent>
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField T="string" Label="Nome" Required="true" RequiredError="nome de usuário é obrigatório!" />
                <MudTextField T="string" Label="Email" Required="true" RequiredError="Email é obrigatório!"
                              Validation="@(new EmailAddressAttribute() {ErrorMessage = "Email inválido"})" />
                <MudTextField T="string" Label="Senha" HelperText="Escolha uma senha forte" @ref="pwField1"
                              InputType="InputType.Password"
                              Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                              RequiredError="Password is required!" />
                <MudTextField T="string"
                              Label="Password" HelperText="Repeat the password" InputType="InputType.Password"
                              Validation="@(new Func<string, string>(PasswordMatch))" />


                <MudDivider Style="margin-top: 32px;"></MudDivider>

                <MudText Style="margin-top: 16px;" Align="Align.Center" Typo="Typo.h6">Configuração de revisão</MudText>
                <MudListSubheader>
                    Escolha o intervalo de revisões que se enquadra na sua rotina de estudos
                    <br />
                    e o sistema agendará para você!
                </MudListSubheader>

                <MudCheckBox @bind-Checked="@revision24h" Color="Color.Tertiary" CheckedIcon="@Icons.Material.Filled.Bookmark" UncheckedIcon="@Icons.Material.Filled.BookmarkBorder">
                    24h
                </MudCheckBox>
                 <MudCheckBox @bind-Checked="@revision24h" Color="Color.Tertiary" CheckedIcon="@Icons.Material.Filled.Bookmark" UncheckedIcon="@Icons.Material.Filled.BookmarkBorder">
                    48h
                </MudCheckBox>
                 <MudCheckBox @bind-Checked="@revision24h" Color="Color.Tertiary" CheckedIcon="@Icons.Material.Filled.Bookmark" UncheckedIcon="@Icons.Material.Filled.BookmarkBorder">
                    72h
                </MudCheckBox>
                 <MudCheckBox @bind-Checked="@revision24h" Color="Color.Tertiary" CheckedIcon="@Icons.Material.Filled.Bookmark" UncheckedIcon="@Icons.Material.Filled.BookmarkBorder">
                    96h
                </MudCheckBox>

            </MudForm>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Register</MudButton>
        </MudCardActions>
    </MudCard>
</div>

@code {
    bool revision24h = true;
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }

}